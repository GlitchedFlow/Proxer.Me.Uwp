<Page x:Class="Proxer.Me.UWP.Views.ProfilePage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Proxer.Me.UWP.Views"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  mc:Ignorable="d"
	  xmlns:template="using:Template10.Controls"
	  xmlns:Charting="using:WinRTXamlToolkit.Controls.DataVisualization.Charting"
	  xmlns:attached="using:Proxer.Me.Controls.AttachedProperties"
	  xmlns:converter="using:Proxer.Me.Controls.Converters"
	  xmlns:i="using:Microsoft.Xaml.Interactivity"
	  xmlns:b="using:Microsoft.Xaml.Interactions.Core"
	  DataContext="{StaticResource ProfileViewModel}">

	<Grid x:Name="root"
		  Background="{StaticResource ContentBackground}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="Narrow">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="proxerHeader.MaxHeight"
								Value="250" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Normal">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1200" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="proxerHeader.Height"
								Value="250" />
						<Setter Target="proxerHeader.MaxHeight"
								Value="250" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<template:PageHeader Text="{Binding Model.Username}"
							 EllipsisVisibility="Collapsed"
							 x:Name="header">
			<template:PageHeader.PrimaryCommands>
				<AppBarButton Label="Parameter"
							  x:Name="toggleParameter"
							  Style="{StaticResource HamburgerButtonStyle}"
							  Command="{Binding SwitchPaneState}"
							  HorizontalContentAlignment="Center"
							  VerticalContentAlignment="Center">
					<AppBarButton.Content>
						<FontIcon x:Name="ContentPresenter"
								  FontSize="20"
								  Glyph="&#xE700;" />
					</AppBarButton.Content>
				</AppBarButton>
			</template:PageHeader.PrimaryCommands>
		</template:PageHeader>

		<SplitView Grid.Row="1"
				   PanePlacement="Right"
				   attached:SplitViewHelper.IsFullScreen="True"
				   attached:SplitViewHelper.FullScreenMaxWidth="600"
				   attached:SplitViewHelper.OpenPaneLength="255"
				   IsPaneOpen="{Binding Model.IsPaneOpen, Mode=TwoWay}"
				   DisplayMode="{Binding Model.PaneDisplayMode}"
				   PaneBackground="{StaticResource Background}">
			<SplitView.Pane>
				<Border BorderBrush="{StaticResource ActiveBorderBrush}"
						BorderThickness="1 0 0 0">
					<ScrollViewer VerticalScrollBarVisibility="Auto">
						<StackPanel Margin="3">
							<Image Source="{Binding Model.Avatar, Converter={StaticResource StringToAvatarConverter}}"
								   Width="250"
								   Stretch="Uniform" />
							<Charting:Chart Grid.Column="1"
											Margin="2"
											Grid.Row="1"
											HorizontalAlignment="Center"
											HorizontalContentAlignment="Center">
								<Charting:Chart.Title>
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="Gesamt:"
												   FontSize="24"
												   FontWeight="Bold"
												   Margin="5 7 0 7" />
										<TextBlock Text="{Binding Model.PointsTotal}"
												   FontSize="24"
												   FontWeight="Bold"
												   Margin="0 7" />
									</StackPanel>
								</Charting:Chart.Title>
								<Charting:PieSeries IndependentValuePath="Key"
													DependentValuePath="Value"
													ItemsSource="{Binding Model.Points}">
									<Charting:PieSeries.LegendItemStyle>
										<Style TargetType="Charting:LegendItem">
											<Setter Property="Foreground"
													Value="{StaticResource Foreground}" />
										</Style>
									</Charting:PieSeries.LegendItemStyle>
								</Charting:PieSeries>
							</Charting:Chart>
							<TextBlock Text="Status:"
									   Width="250"
									   FontWeight="Light"
									   TextAlignment="Left" />
							<TextBlock Text="{Binding Model.Status}"
									   FontSize="16"
									   HorizontalAlignment="Center"
									   TextWrapping="WrapWholeWords"
									   Width="250" />
						</StackPanel>
					</ScrollViewer>
				</Border>
			</SplitView.Pane>
			<SplitView.Content>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Border BorderThickness="0 0 0 1"
							Grid.Row="0"
							BorderBrush="{StaticResource ActiveBorderBrush}"
							Visibility="{Binding Model.ShowHeader, Source={StaticResource SettingsViewModel}, Converter={StaticResource BoolToVisibilityConverter}}">
						<Image Source="{Binding Model.Header, Converter={StaticResource RandomHeaderToStringConverter}}"
							   HorizontalAlignment="Center"
							   x:Name="proxerHeader" />
					</Border>

					<Pivot Grid.Row="1"
						   SelectedIndex="{Binding Model.SelectedContent, Mode=TwoWay}">
						<PivotItem Header="Top 10">
							<ScrollViewer VerticalScrollBarVisibility="Auto">
								<StackPanel Margin="3">
									<GridView ItemsSource="{Binding Model.TopTenCollection, Converter={StaticResource TopTenFilteredConverter}, ConverterParameter=anime}"
											  HorizontalAlignment="Center"
											  HorizontalContentAlignment="Center"
											  Margin="3"
											  IsItemClickEnabled="True"
											  SelectedItem="{Binding Model.SelectedAnimeTopTen, Mode=TwoWay}"
											  ItemTemplate="{StaticResource ProfileTopTenItem}"
											  x:Name="animeTopTen">
										<i:Interaction.Behaviors>
											<b:EventTriggerBehavior EventName="ItemClick">
												<b:InvokeCommandAction Command="{Binding OpenEntry}" />
											</b:EventTriggerBehavior>
										</i:Interaction.Behaviors>
										<GridView.Header>
											<TextBlock Text="Anime"
													   VerticalAlignment="Center"
													   HorizontalAlignment="Center"
													   Margin="3"
													   FontSize="28" />
										</GridView.Header>
									</GridView>
									<GridView ItemsSource="{Binding Model.TopTenCollection, Converter={StaticResource TopTenFilteredConverter}, ConverterParameter=manga}"
											  HorizontalAlignment="Center"
											  HorizontalContentAlignment="Center"
											  Margin="3"
											  IsItemClickEnabled="True"
											  SelectedItem="{Binding Model.SelectedMangaTopTen, Mode=TwoWay}"
											  ItemTemplate="{StaticResource ProfileTopTenItem}"
											  x:Name="mangaTopTen">
										<i:Interaction.Behaviors>
											<b:EventTriggerBehavior EventName="ItemClick">
												<b:InvokeCommandAction Command="{Binding OpenEntry}" />
											</b:EventTriggerBehavior>
										</i:Interaction.Behaviors>
										<GridView.Header>
											<TextBlock Text="Manga"
													   Margin="3"
													   VerticalAlignment="Center"
													   HorizontalAlignment="Center"
													   FontSize="28" />
										</GridView.Header>
									</GridView>
								</StackPanel>
							</ScrollViewer>
						</PivotItem>
						<PivotItem Header="Anime">
							<PivotItem.Resources>
								<converter:StateStringConverter x:Key="StateStringConverter"
																IsAnime="True" />
								<CollectionViewSource x:Key="animeCollection"
													  IsSourceGrouped="True"
													  Source="{Binding Model.AnimeCollection, Converter={StaticResource UserListToGroupedListConverter}}" />
							</PivotItem.Resources>
							<ListView ItemsSource="{Binding Source={StaticResource animeCollection}}"
									  SelectedItem="{Binding Model.SelectedAnime, Mode=TwoWay}"
									  IsItemClickEnabled="True"
									  x:Name="animeList"
									  ItemTemplate="{StaticResource UserListItem}">
								<i:Interaction.Behaviors>
									<b:EventTriggerBehavior EventName="ItemClick">
										<b:InvokeCommandAction Command="{Binding OpenEntry}" />
									</b:EventTriggerBehavior>
								</i:Interaction.Behaviors>
								<ListView.GroupStyle>
									<GroupStyle>
										<GroupStyle.HeaderTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding Key, Converter={StaticResource StateStringConverter}}"
														   Margin="4"
														   VerticalAlignment="Center"
														   HorizontalAlignment="Center" />
											</DataTemplate>
										</GroupStyle.HeaderTemplate>
									</GroupStyle>
								</ListView.GroupStyle>
								<ListView.Footer>
									<Button Content="Weitere Laden"
											Margin="3"
											Visibility="{Binding Model.HasMoreAnime, Converter={StaticResource BoolToVisibilityConverter}}"
											Command="{Binding LoadAnimePage}"
											HorizontalAlignment="Center" />
								</ListView.Footer>
							</ListView>
						</PivotItem>
						<PivotItem Header="Manga">
							<PivotItem.Resources>
								<converter:StateStringConverter x:Key="StateStringConverter"
																IsAnime="False" />
								<CollectionViewSource x:Key="mangaCollection"
													  IsSourceGrouped="True"
													  Source="{Binding Model.MangaCollection, Converter={StaticResource UserListToGroupedListConverter}}" />
							</PivotItem.Resources>
							<ListView ItemsSource="{Binding Source={StaticResource mangaCollection}}"
									  SelectedItem="{Binding Model.SelectedManga, Mode=TwoWay}"
									  IsItemClickEnabled="True"
									  x:Name="mangaList"
									  ItemTemplate="{StaticResource UserListItem}">
								<i:Interaction.Behaviors>
									<b:EventTriggerBehavior EventName="ItemClick">
										<b:InvokeCommandAction Command="{Binding OpenEntry}" />
									</b:EventTriggerBehavior>
								</i:Interaction.Behaviors>
								<ListView.GroupStyle>
									<GroupStyle>
										<GroupStyle.HeaderTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding Key, Converter={StaticResource StateStringConverter}}"
														   Margin="4"
														   VerticalAlignment="Center"
														   HorizontalAlignment="Center" />
											</DataTemplate>
										</GroupStyle.HeaderTemplate>
									</GroupStyle>
								</ListView.GroupStyle>
								<ListView.Footer>
									<Button Content="Weitere Laden"
											Margin="3"
											Visibility="{Binding Model.HasMoreManga, Converter={StaticResource BoolToVisibilityConverter}}"
											Command="{Binding LoadMangaPage}"
											HorizontalAlignment="Center" />
								</ListView.Footer>
							</ListView>
						</PivotItem>
						<PivotItem Header="Kommentare">
							<ScrollViewer VerticalScrollBarVisibility="Auto">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<ItemsControl ItemsSource="{Binding Model.CommentCollection}"
												  ItemTemplate="{StaticResource ProfileCommentItem}">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Vertical">
												</StackPanel>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
									<Button Content="Weitere Laden"
											Margin="3"
											Grid.Row="1"
											Visibility="{Binding Model.HasMoreComments, Converter={StaticResource BoolToVisibilityConverter}}"
											Command="{Binding LoadCommentPage}"
											HorizontalAlignment="Center" />
									<TextBlock Text="Keine Kommentare"
											   Grid.RowSpan="2"
											   VerticalAlignment="Center"
											   HorizontalAlignment="Center"
											   FontSize="32"
											   Visibility="{Binding Model.CommentCollection.Count, Converter={StaticResource InvertedIntToVisibilityConverter}}" />
								</Grid>
							</ScrollViewer>
						</PivotItem>
						<PivotItem Header="Chronik">
							<TextBlock Text="Noch nicht in der API implementiert"
									   TextWrapping="WrapWholeWords"
									   FontSize="24"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Center"
									   FontWeight="Light" />
						</PivotItem>
					</Pivot>
				</Grid>
			</SplitView.Content>
		</SplitView>
	</Grid>
</Page>