<Page x:Class="Proxer.Me.UWP.Views.MessengerPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:Proxer.Me.UWP.Views"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  mc:Ignorable="d"
	  xmlns:template="using:Template10.Controls"
	  xmlns:attached="using:Proxer.Me.Controls.AttachedProperties"
	  xmlns:selector="using:Proxer.Me.Controls.Selectors"
	  xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
	  xmlns:behavior="using:Proxer.Me.Controls.Behaviors"
	  DataContext="{StaticResource MessengerViewModel}">

	<Grid x:Name="root"
		  Background="{StaticResource ContentBackground}">

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="Narrow">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="proxerHeader.MaxHeight"
								Value="250" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Normal">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1200" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="proxerHeader.Height"
								Value="250" />
						<Setter Target="proxerHeader.MaxHeight"
								Value="250" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<template:PageHeader Text="{Binding Model.SelectedConference.Topic, FallbackValue=Messenger}"
							 x:Name="header"
							 EllipsisVisibility="Collapsed">
			<template:PageHeader.PrimaryCommands>
				<AppBarButton Label="Parameter"
							  x:Name="toggleParameter"
							  Style="{StaticResource HamburgerButtonStyle}"
							  Command="{Binding SwitchPaneState}"
							  HorizontalContentAlignment="Center"
							  VerticalContentAlignment="Center">
					<AppBarButton.Content>
						<FontIcon x:Name="ContentPresenter"
								  FontSize="20"
								  Glyph="&#xE700;" />
					</AppBarButton.Content>
				</AppBarButton>
			</template:PageHeader.PrimaryCommands>
		</template:PageHeader>

		<SplitView Grid.Row="1"
				   PanePlacement="Right"
				   attached:SplitViewHelper.IsFullScreen="True"
				   attached:SplitViewHelper.FullScreenMaxWidth="600"
				   attached:SplitViewHelper.OpenPaneLength="350"
				   IsPaneOpen="{Binding Model.IsPaneOpen, Mode=TwoWay}"
				   DisplayMode="{Binding Model.PaneDisplayMode}"
				   PaneBackground="{StaticResource Background}">
			<SplitView.Pane>
				<Border BorderBrush="{StaticResource ActiveBorderBrush}"
						BorderThickness="1 0 0 0">
					<Grid>
						<ProgressBar IsIndeterminate="True"
									 VerticalAlignment="Center"
									 HorizontalAlignment="Stretch"
									 Visibility="{Binding Model.LoadingChats, Converter={StaticResource BoolToVisibilityConverter}}" />
						<ListView ItemsSource="{Binding Model.ConferenceCollection}"
								  SelectedItem="{Binding Model.SelectedConference, Mode=TwoWay}"
								  Visibility="{Binding Model.LoadingChats, Converter={StaticResource InvertedBoolToVisibilityConverter}}"
								  HorizontalContentAlignment="Stretch"
								  VerticalContentAlignment="Stretch"
								  ItemTemplate="{StaticResource ConferenceItem}">
						</ListView>
					</Grid>
				</Border>
			</SplitView.Pane>
			<SplitView.Content>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<Border BorderThickness="0 0 0 1"
							Grid.Row="0"
							BorderBrush="{StaticResource ActiveBorderBrush}"
							Visibility="{Binding Model.ShowHeader, Source={StaticResource SettingsViewModel}, Converter={StaticResource BoolToVisibilityConverter}}">
						<Image Source="{Binding Model.Header, Converter={StaticResource RandomHeaderToStringConverter}}"
							   HorizontalAlignment="Center"
							   x:Name="proxerHeader" />
					</Border>

					<RelativePanel Grid.Row="1"
								   Visibility="{Binding Model.ChatSelected, Converter={StaticResource BoolToVisibilityConverter}}">
						<Button RelativePanel.AlignRightWithPanel="True"
								Margin="3"
								x:Name="info"
								IsEnabled="False">
							<FontIcon Glyph="&#xE10C;"
									  FontSize="20" />
						</Button>
						<Button Content="Weitere Laden"
								RelativePanel.AlignHorizontalCenterWithPanel="True"
								Margin="3"
								Command="{Binding LoadMoreMessages}"
								Visibility="{Binding Model.HasMoreMessages, Converter={StaticResource BoolToVisibilityConverter}}"
								x:Name="loadMore" />
						<Rectangle RelativePanel.AlignLeftWithPanel="True"
								   RelativePanel.AlignRightWithPanel="True"
								   Height="1"
								   RelativePanel.Below="info"
								   x:Name="separator"
								   Fill="{StaticResource BorderBrush}" />
						<ScrollViewer x:Name="MessagesHolder"
									  RelativePanel.AlignLeftWithPanel="True"
									  RelativePanel.AlignRightWithPanel="True"
									  RelativePanel.Below="separator"
									  RelativePanel.Above="sendBlock"
									  VerticalScrollBarVisibility="Auto"
									  attached:ScrollViewHelper.AutoScrollToBottom="{Binding Model.ScrollToBottom}">
							<ScrollViewer.Resources>
								<CollectionViewSource Source="{Binding Model.GroupedMessages}"
													  IsSourceGrouped="True"
													  x:Key="groupedMessages" />
							</ScrollViewer.Resources>
							<ItemsControl ItemsSource="{Binding Source={StaticResource groupedMessages}}"
										  HorizontalAlignment="Stretch"
										  HorizontalContentAlignment="Stretch"
										  VerticalAlignment="Stretch"
										  VerticalContentAlignment="Stretch"
										  Grid.Row="1">
								<ItemsControl.GroupStyle>
									<GroupStyle HidesIfEmpty="True">
										<GroupStyle.HeaderContainerStyle>
											<Style TargetType="ContentControl">
												<Setter Property="HorizontalContentAlignment"
														Value="Stretch" />
											</Style>
										</GroupStyle.HeaderContainerStyle>
										<GroupStyle.HeaderTemplate>
											<DataTemplate>
												<Border Background="{StaticResource FocusedBackground}"
														BorderBrush="{StaticResource FocusedBorderBrush}"
														BorderThickness="1"
														Margin="3"
														HorizontalAlignment="Center"
														MinWidth="80">
													<TextBlock Text="{Binding Key, Converter={StaticResource MessageTimeStampConverter}}"
															   TextAlignment="Center" />
												</Border>
											</DataTemplate>
										</GroupStyle.HeaderTemplate>
									</GroupStyle>
								</ItemsControl.GroupStyle>
								<ItemsControl.ItemTemplateSelector>
									<selector:MessageTemplateSelector RecievedMessage="{StaticResource RecieveMessageItem}"
																	  SendMessage="{StaticResource SendMessageItem}"
																	  Info="{StaticResource InfoMessageItem}">
									</selector:MessageTemplateSelector>
								</ItemsControl.ItemTemplateSelector>
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<ItemsStackPanel AreStickyGroupHeadersEnabled="True" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
							</ItemsControl>
						</ScrollViewer>
						<Border BorderBrush="{StaticResource BorderBrush}"
								BorderThickness="0 1 0 0"
								Grid.Row="1"
								x:Name="sendBlock"
								RelativePanel.AlignBottomWithPanel="True"
								RelativePanel.AlignRightWithPanel="True"
								RelativePanel.AlignLeftWithPanel="True"
								Background="{StaticResource Background}">
							<RelativePanel>
								<TextBox x:Name="MessageText"
										 PlaceholderText="Nachricht schreiben"
										 Text="{Binding Model.InputMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										 TextWrapping="Wrap"
										 RelativePanel.AlignLeftWithPanel="True"
										 RelativePanel.AlignTopWithPanel="True"
										 RelativePanel.AlignBottomWithPanel="True"
										 RelativePanel.LeftOf="btnSenden"
										 MaxHeight="100"
										 ScrollViewer.VerticalScrollBarVisibility="Auto"
										 Margin="2"
										 AcceptsReturn="True" />
								<Button x:Name="btnSenden"
										Grid.Column="1"
										RelativePanel.AlignTopWithPanel="True"
										RelativePanel.AlignRightWithPanel="True"
										RelativePanel.AlignBottomWithPanel="True"
										Margin="2"
										Command="{Binding SendMessage}">
									<FontIcon Glyph="&#xE724;"
											  Height="20"
											  Width="20" />
								</Button>
							</RelativePanel>
						</Border>
					</RelativePanel>
				</Grid>
			</SplitView.Content>
		</SplitView>
	</Grid>
</Page>